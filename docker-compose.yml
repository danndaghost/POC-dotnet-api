version: '3.8'

services:
  helloworld-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: helloworld-api
    restart: unless-stopped
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - TZ=America/Santiago
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/info/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - helloworld-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.helloworld-api.rule=Host(`api.localhost`)"
      - "traefik.http.services.helloworld-api.loadbalancer.server.port=8080"

  # Optional: Add a reverse proxy (Nginx) for production scenarios
  nginx:
    image: nginx:alpine
    container_name: helloworld-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - helloworld-api
    networks:
      - helloworld-network
    profiles:
      - nginx

networks:
  helloworld-network:
    driver: bridge
    name: helloworld-network

# Para desarrollo, usa:
# docker-compose up
# 
# Para producci√≥n con nginx:
# docker-compose --profile nginx up